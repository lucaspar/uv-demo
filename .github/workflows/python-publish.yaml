# This workflow will upload a Python Package using Twine when a release is created
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python#publishing-to-package-registries

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Upload Python Package

on:
    release:
        types: [published]

permissions:
    contents: read

jobs:
    deploy:
        runs-on: ubuntu-latest
        name: pypi-deploy
        environment: pypi
        steps:
            # https://github.com/actions/checkout
            - uses: actions/checkout@v4
            - name: Set up Python
              # https://github.com/actions/setup-python
              uses: actions/setup-python@v5
              with:
                  python-version: "3.x"
            - name: astral-sh/setup-uv
              # You may pin to the exact commit or the version.
              # uses: astral-sh/setup-uv@c9aa747934b6867b18bf8f6624a8929c4f76147b
              # https://github.com/astral-sh/setup-uv
              uses: astral-sh/setup-uv@v3
              with:
                  # The version of uv to install
                  version: latest # optional, default is latest
                  # The checksum of the uv version to install
                  # checksum: # optional
                  # Used to increase the rate limit when retrieving versions and downloading uv.
                  github-token: ${{ github.token }} # optional, default is ${{ github.token }}
                  # Enable caching of the uv cache
                  enable-cache: false # optional, default is false
                  # Glob pattern to match files relative to the repository root to control the cache.
                  # cache-dependency-glob: # optional, default is **/uv.lock
                  # Suffix for the cache key
                  # cache-suffix: # optional
                  # Local path to store the cache.
                  # cache-local-path: # optional
                  # Custom path to set UV_TOOL_DIR to.
                  # tool-dir: # optional
                  # Custom path to set UV_TOOL_BIN_DIR to.
                  # tool-bin-dir: # optional
            - name: Install dependencies
              run: |
                  uv sync --frozen --link-mode=copy
            - name: Build package
              run: uv build --link-mode=copy
            - name: Publish package
              # https://github.com/marketplace/actions/pypi-publish
              uses: pypa/gh-action-pypi-publish@release/v1
              with:
                  # https://pypi.org/manage/account/#api-tokens
                  user: __token__
                  password: ${{ secrets.PYPI_API_TOKEN }}
